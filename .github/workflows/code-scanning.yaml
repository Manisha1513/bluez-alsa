name: Code Scanning

on:
  push:
  pull_request:
    branches: [ master ]

env:
  MAKEFLAGS: -j8

permissions:
  actions: read
  contents: read
  security-events: write

jobs:

  cccc:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Run cccc analysis
      uses: sarnold/cccc-action@main
    - uses: actions/upload-artifact@v4
      with:
        name: ${{ github.job }} logs
        path: metrics

  code-ql:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Dependencies
      uses: ./.github/actions/apt-install-deps
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: cpp
        queries: security-and-quality
    - name: Create Build Environment
      run: |
        mkdir -p ${{ github.workspace }}/{build,m4}
        autoreconf --install
    - name: Configure GNU Automake
      working-directory: ${{ github.workspace }}/build
      run: |
        ${{ github.workspace }}/configure \
          --enable-aac \
          --enable-aptx \
          --enable-aptx-hd \
          --with-libopenaptx \
          --enable-faststream \
          --enable-lc3-swb \
          --enable-midi \
          --enable-mp3lame \
          --enable-mpg123 \
          --enable-msbc \
          --enable-ofono \
          --enable-opus \
          --enable-upower \
          --enable-aplay \
          --enable-ctl \
          --enable-rfcomm \
          --enable-a2dpconf \
          --enable-hcitop
    - name: Build
      working-directory: ${{ github.workspace }}/build
      run: make
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  doc8-lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Run reStructuredText Linter
      uses: deep-entertainment/doc8-action@v5
      with:
        scanPaths: ${{ github.workspace }}

  include-what-you-use:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Dependencies
      uses: ./.github/actions/apt-install-deps
    - name: Create Build Environment
      run: |
        mkdir -p ${{ github.workspace }}/{build,m4}
        autoreconf --install
    - name: Configure GNU Automake
      working-directory: ${{ github.workspace }}/build
      run: |
        ${{ github.workspace }}/configure \
          --enable-debug \
          --enable-debug-time \
          --enable-aac \
          --enable-aptx \
          --enable-aptx-hd \
          --with-libopenaptx \
          --enable-faststream \
          --enable-lc3-swb \
          --enable-midi \
          --enable-mp3lame \
          --enable-mpg123 \
          --enable-msbc \
          --enable-ofono \
          --enable-opus \
          --enable-upower \
          --enable-aplay \
          --enable-ctl \
          --enable-rfcomm \
          --enable-a2dpconf \
          --enable-hcitop \
          --enable-test
    - name: Build
      working-directory: ${{ github.workspace }}/build
      run: bear -- make check TESTS=
    - name: Run IWYU Check
      run: |
        jq 'del(.[] | select(.file | test("-ifaces?.c")))' \
          ${{ github.workspace }}/build/compile_commands.json > tmp.json \
          && mv tmp.json ${{ github.workspace }}/build/compile_commands.json
        iwyu_tool -p ${{ github.workspace }}/build -- \
          -Xiwyu --mapping_file=${{ github.workspace }}/.github/iwyu.imp \
          -Xiwyu --keep=*/config.h \
          -Xiwyu --no_fwd_decls

  markdown-lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Run Markdown Linter
      uses: nosborn/github-action-markdown-cli@v3
      with:
        files: ${{ github.workspace }}

  shellcheck:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Run ShellCheck Scan
      uses: redhat-plumbers-in-action/differential-shellcheck@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

  spellcheck:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Run Spell Check
      uses: rojopolis/spellcheck-github-actions@master
      with:
        config_path: .github/spellcheck.yaml
